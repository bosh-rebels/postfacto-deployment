---
resources:
- name: postfacto-deployment-code
  type: git
  source: {uri: "https://github.com/bosh-rebels/postfacto-deployment.git"}

- name: postfacto-docker-image
  type: docker-image
  source:
    repository: ((docker-image-repository))
    tag: 'v1'
    username: ((harbor_username))
    password: ((harbor_password))
    insecure_registries: [((insecure-registry))]

- name: postfacto-version
  type: semver
  source:
    driver: s3
    initial_version: 0.0.2
    key: "postfacto/version"
    bucket: ((s3_bucket))
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3_endpoint))
    region_name: ((s3_region))

- name: package-tarball
  type: s3
  source:
    bucket: ((s3_bucket))
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))
    endpoint: ((s3_endpoint))
    region_name: ((s3_region))
    regexp: "release-package-tarball/postfacto-package-(.*).tgz"

- name: rootfs
  type: docker-image
  source:
    repository: ((rootfs-repository-image))
    tag: latest
    username: ((harbor_username))
    password: ((harbor_password))
    insecure_registries: [ ((insecure-registry))]

jobs:
- name: create-postfacto-tar
  plan:
  - get: postfacto-deployment-code
  - get: postfacto-docker-image
  - get: postfacto-version

  - task: create-tarball
    image: postfacto-docker-image
    file: postfacto-deployment/tasks/tarball.yml
    output_mapping: {output: release-package-tarball}

  - put: package-tarball
    params:
      file: "release-package-tarball/postfacto-package-*.tgz"
      resource: package-tarball
  - put: postfacto-version
    params:
      bump: patch

- name: deploy-postfacto
  plan:
  - get: postfacto-deployment-code
  - get: package-tarball
    params:
      unpack: true
    passed: [create-postfacto-tar]
  - get: rootfs

  - task: deploy
    image: rootfs
    file: postfacto-deployment/tasks/deploy.yml
    params:
      ADMIN_EMAIL: ((admin_email))
      ADMIN_PASSWORD: ((admin_password))
      APP_NAME: ((app_name))
      ENABLE_ANALYTICS: false
      OPSMAN_DOMAIN_OR_IP_ADDRESS: ((opsman_domain_or_ip_address))
      OPSMAN_USERNAME: ((opsman_username))
      OPSMAN_PASSWORD: ((opsman_password))
